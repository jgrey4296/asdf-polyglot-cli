#!/usr/bin/env bash
# polyglot -*- mode: sh -*-
# Main script for polyglot projects, to hook into cargo.
# polyglot is aliased as 'pg_' in places

current_script_path="${BASH_SOURCE[0]}"
POLY_SRC=$(realpath "$(dirname "$current_script_path")")
if [[ -z "$POLYGLOT_ROOT" ]]; then
    echo "Make sure theres a POLYGLOT_ROOT env var"
    exit 1
fi

source "$POLY_SRC/lib-util.bash"
source "$POLY_SRC/lib-install.bash"
source "$POLY_SRC/lib-run.bash"
source "$POLY_SRC/lib-docs.bash"
source "$POLY_SRC/lib-update.bash"

# General
POLYGLOT_VERSION="0.1.0"
VERBOSE=0
SRC_DIR="$POLYGLOT_ROOT/src"
TEMP_DIR="$POLYGLOT_ROOT/.temp"
LOG_DIR="$TEMP_DIR/logs"
DATA_DIR="$SRC_DIR/_data"
ASDF_PLUGIN_LIST="$POLYGLOT_ROOT/.asdf.plugins"

# Docs
DOC_OUT="$TEMP_DIR/docs"
SPHINX_BUILDER="html"

# Tex
TEX_USE_BIBTEX=1
TEX_PASSES=3
TEX_OUT="$DOC_OUT/tex"
TEX_TARGET=""
TEX_TARGET_FILE=""
TEX_TARGET_DIR=""
TEX_LUA_FILE="$POLYGLOT_ROOT/init.tex.lua"
TEX_DEFAULT="main.tex"

function pg_print_help () {
    header "Polyglot ${POLYGLOT_VERSION} - an access point for polyglot project management."
    echo ""
    echo "cargo polyglot [-v|--verbose] [subcmd] [args*] [-h | --help]"
    echo ""
    echo "SubCommands: "
    echo "- i | init        : initialise the polyglot project"
    echo "- e | export      : export additional dependencies (asdf plugins, tex packages list...)"
    echo ""
    echo "- a | active      : set a directory as active"
    echo "- d | deactivate  : unset a directory from being active"
    echo "- list            : list activated directories"
    echo "- root            : print the root directory of the polyglot project"
    echo ""
    echo "- release         : run release scripts to bump version num and tag commit"
    echo "- docs            : build documentation (sphinx, mdbook, rustdoc...)"
    echo "- tex             : run a tex compilation"
    echo "- keystore        : setup an android keystore"
    echo "- dispy           : disassemble a python file to bytecode"

    echo ""
    echo "Env Var: POLYGLOT_ROOT for the root of the project"
}

function polyglot_parse_args () {
    if [[ "$1" = "polyglot" ]]; then
        shift
    fi
    if [[ $# -eq 0  ]]; then
        pg_print_help
        exit
    fi

    case $1 in
        -h|--help)
            pg_print_help
            exit
            ;;
        -v|--verbose)
            VERBOSE=1
            ;;
        -t|--target)
            echo "Target: $2"
            ;;
        --*=*)
            echo "Assignment: $1"
            ;;
        # polyglot cmds
        i|init)
            init_polyglot
            ;;
        u|update)
            update_polyglot
            ;;
        e|export)
            shift
            run_export "$@"
            ;;
        a|activate)
            echo "[polyglot] Activating $PWD"
            touch "$PWD/.active"
            ;;
        d|deactivate)
            if [[ -e "$PWD/.active" ]]; then
                echo "Deactivating $PWD"
                rm "$PWD/.active"
            else
                echo "Directory not active anyway"
            fi
            ;;
        list)
            echo "Active Subprojects:"
            for sub in $(get_activated)
            do
                echo "- ${sub}"
            done
            ;;
        root)
            echo "${POLYGLOT_ROOT}"
            ;;
        # subproject focused cmds
        release)
            shift
            run_release "$@"
            ;;
        docs)
            shift
            pg_docs "$@"
            ;;
        tex)
            shift
            pg_tex "$@"
            ;;
        dispy)
            shift
            run_dispy "$@"
            ;;
        keystore)
            shift
            run_keystore "$@"
            ;;
        lint)
            shift
            run_lint "$@"
            ;;
        test)
            shift
            run_lint "$@"
            ;;
        *) # Positional
            echo "Positional: $1"
            ;;
    esac
}

# get rid of the "polyglot" arg
polyglot_parse_args "$@"
